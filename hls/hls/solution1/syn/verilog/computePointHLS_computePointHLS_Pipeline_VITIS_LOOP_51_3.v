// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module computePointHLS_computePointHLS_Pipeline_VITIS_LOOP_51_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        add25_31_lcssa104,
        add25_30_lcssa102,
        add25_29_lcssa100,
        add25_28_lcssa98,
        add25_27_lcssa96,
        add25_26_lcssa94,
        add25_25_lcssa92,
        add25_24_lcssa90,
        add25_23_lcssa88,
        add25_22_lcssa86,
        add25_21_lcssa84,
        add25_20_lcssa82,
        add25_19_lcssa80,
        add25_18_lcssa78,
        add25_17_lcssa76,
        add25_16_lcssa74,
        add25_15_lcssa72,
        add25_14_lcssa70,
        add25_13_lcssa68,
        add25_12_lcssa66,
        add25_11_lcssa64,
        add25_10_lcssa62,
        add25_9_lcssa60,
        add25_8_lcssa58,
        add25_7_lcssa56,
        add25_6_lcssa54,
        add25_5_lcssa52,
        add25_4_lcssa50,
        add25_3_lcssa48,
        add25_2_lcssa46,
        add25_1_lcssa44,
        add25_lcssa42,
        sext_ln49_1,
        sext_ln49,
        add25_3140_out,
        add25_3140_out_ap_vld,
        add25_3039_out,
        add25_3039_out_ap_vld,
        add25_2938_out,
        add25_2938_out_ap_vld,
        add25_2837_out,
        add25_2837_out_ap_vld,
        add25_2736_out,
        add25_2736_out_ap_vld,
        add25_2635_out,
        add25_2635_out_ap_vld,
        add25_2534_out,
        add25_2534_out_ap_vld,
        add25_2433_out,
        add25_2433_out_ap_vld,
        add25_2332_out,
        add25_2332_out_ap_vld,
        add25_2231_out,
        add25_2231_out_ap_vld,
        add25_2130_out,
        add25_2130_out_ap_vld,
        add25_2029_out,
        add25_2029_out_ap_vld,
        add25_1928_out,
        add25_1928_out_ap_vld,
        add25_1827_out,
        add25_1827_out_ap_vld,
        add25_1726_out,
        add25_1726_out_ap_vld,
        add25_1625_out,
        add25_1625_out_ap_vld,
        add25_1524_out,
        add25_1524_out_ap_vld,
        add25_1423_out,
        add25_1423_out_ap_vld,
        add25_1322_out,
        add25_1322_out_ap_vld,
        add25_1221_out,
        add25_1221_out_ap_vld,
        add25_1120_out,
        add25_1120_out_ap_vld,
        add25_1019_out,
        add25_1019_out_ap_vld,
        add25_918_out,
        add25_918_out_ap_vld,
        add25_817_out,
        add25_817_out_ap_vld,
        add25_716_out,
        add25_716_out_ap_vld,
        add25_615_out,
        add25_615_out_ap_vld,
        add25_514_out,
        add25_514_out_ap_vld,
        add25_413_out,
        add25_413_out_ap_vld,
        add25_312_out,
        add25_312_out_ap_vld,
        add25_211_out,
        add25_211_out_ap_vld,
        add25_110_out,
        add25_110_out_ap_vld,
        add256_out,
        add256_out_ap_vld,
        grp_fu_493_p_din0,
        grp_fu_493_p_din1,
        grp_fu_493_p_opcode,
        grp_fu_493_p_dout0,
        grp_fu_493_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [511:0] m_axi_gmem0_WDATA;
output  [63:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [511:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [511:0] m_axi_gmem1_WDATA;
output  [63:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [511:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [31:0] add25_31_lcssa104;
input  [31:0] add25_30_lcssa102;
input  [31:0] add25_29_lcssa100;
input  [31:0] add25_28_lcssa98;
input  [31:0] add25_27_lcssa96;
input  [31:0] add25_26_lcssa94;
input  [31:0] add25_25_lcssa92;
input  [31:0] add25_24_lcssa90;
input  [31:0] add25_23_lcssa88;
input  [31:0] add25_22_lcssa86;
input  [31:0] add25_21_lcssa84;
input  [31:0] add25_20_lcssa82;
input  [31:0] add25_19_lcssa80;
input  [31:0] add25_18_lcssa78;
input  [31:0] add25_17_lcssa76;
input  [31:0] add25_16_lcssa74;
input  [31:0] add25_15_lcssa72;
input  [31:0] add25_14_lcssa70;
input  [31:0] add25_13_lcssa68;
input  [31:0] add25_12_lcssa66;
input  [31:0] add25_11_lcssa64;
input  [31:0] add25_10_lcssa62;
input  [31:0] add25_9_lcssa60;
input  [31:0] add25_8_lcssa58;
input  [31:0] add25_7_lcssa56;
input  [31:0] add25_6_lcssa54;
input  [31:0] add25_5_lcssa52;
input  [31:0] add25_4_lcssa50;
input  [31:0] add25_3_lcssa48;
input  [31:0] add25_2_lcssa46;
input  [31:0] add25_1_lcssa44;
input  [31:0] add25_lcssa42;
input  [57:0] sext_ln49_1;
input  [57:0] sext_ln49;
output  [31:0] add25_3140_out;
output   add25_3140_out_ap_vld;
output  [31:0] add25_3039_out;
output   add25_3039_out_ap_vld;
output  [31:0] add25_2938_out;
output   add25_2938_out_ap_vld;
output  [31:0] add25_2837_out;
output   add25_2837_out_ap_vld;
output  [31:0] add25_2736_out;
output   add25_2736_out_ap_vld;
output  [31:0] add25_2635_out;
output   add25_2635_out_ap_vld;
output  [31:0] add25_2534_out;
output   add25_2534_out_ap_vld;
output  [31:0] add25_2433_out;
output   add25_2433_out_ap_vld;
output  [31:0] add25_2332_out;
output   add25_2332_out_ap_vld;
output  [31:0] add25_2231_out;
output   add25_2231_out_ap_vld;
output  [31:0] add25_2130_out;
output   add25_2130_out_ap_vld;
output  [31:0] add25_2029_out;
output   add25_2029_out_ap_vld;
output  [31:0] add25_1928_out;
output   add25_1928_out_ap_vld;
output  [31:0] add25_1827_out;
output   add25_1827_out_ap_vld;
output  [31:0] add25_1726_out;
output   add25_1726_out_ap_vld;
output  [31:0] add25_1625_out;
output   add25_1625_out_ap_vld;
output  [31:0] add25_1524_out;
output   add25_1524_out_ap_vld;
output  [31:0] add25_1423_out;
output   add25_1423_out_ap_vld;
output  [31:0] add25_1322_out;
output   add25_1322_out_ap_vld;
output  [31:0] add25_1221_out;
output   add25_1221_out_ap_vld;
output  [31:0] add25_1120_out;
output   add25_1120_out_ap_vld;
output  [31:0] add25_1019_out;
output   add25_1019_out_ap_vld;
output  [31:0] add25_918_out;
output   add25_918_out_ap_vld;
output  [31:0] add25_817_out;
output   add25_817_out_ap_vld;
output  [31:0] add25_716_out;
output   add25_716_out_ap_vld;
output  [31:0] add25_615_out;
output   add25_615_out_ap_vld;
output  [31:0] add25_514_out;
output   add25_514_out_ap_vld;
output  [31:0] add25_413_out;
output   add25_413_out_ap_vld;
output  [31:0] add25_312_out;
output   add25_312_out_ap_vld;
output  [31:0] add25_211_out;
output   add25_211_out_ap_vld;
output  [31:0] add25_110_out;
output   add25_110_out_ap_vld;
output  [31:0] add256_out;
output   add256_out_ap_vld;
output  [31:0] grp_fu_493_p_din0;
output  [31:0] grp_fu_493_p_din1;
output  [1:0] grp_fu_493_p_opcode;
input  [31:0] grp_fu_493_p_dout0;
output   grp_fu_493_p_ce;

reg ap_idle;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem1_RREADY;
reg add25_3140_out_ap_vld;
reg add25_3039_out_ap_vld;
reg add25_2938_out_ap_vld;
reg add25_2837_out_ap_vld;
reg add25_2736_out_ap_vld;
reg add25_2635_out_ap_vld;
reg add25_2534_out_ap_vld;
reg add25_2433_out_ap_vld;
reg add25_2332_out_ap_vld;
reg add25_2231_out_ap_vld;
reg add25_2130_out_ap_vld;
reg add25_2029_out_ap_vld;
reg add25_1928_out_ap_vld;
reg add25_1827_out_ap_vld;
reg add25_1726_out_ap_vld;
reg add25_1625_out_ap_vld;
reg add25_1524_out_ap_vld;
reg add25_1423_out_ap_vld;
reg add25_1322_out_ap_vld;
reg add25_1221_out_ap_vld;
reg add25_1120_out_ap_vld;
reg add25_1019_out_ap_vld;
reg add25_918_out_ap_vld;
reg add25_817_out_ap_vld;
reg add25_716_out_ap_vld;
reg add25_615_out_ap_vld;
reg add25_514_out_ap_vld;
reg add25_413_out_ap_vld;
reg add25_312_out_ap_vld;
reg add25_211_out_ap_vld;
reg add25_110_out_ap_vld;
reg add256_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln51_reg_2492;
reg    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem1_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
reg    gmem0_blk_n_R;
reg   [31:0] reg_1202;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] reg_1206;
reg   [31:0] reg_1210;
reg   [31:0] reg_1214;
reg   [31:0] reg_1218;
reg   [31:0] reg_1222;
reg   [31:0] reg_1226;
reg   [31:0] reg_1230;
reg   [31:0] reg_1234;
reg   [31:0] reg_1238;
reg   [31:0] reg_1242;
reg   [31:0] reg_1246;
reg   [31:0] reg_1250;
reg   [31:0] reg_1254;
reg   [31:0] reg_1258;
reg   [31:0] reg_1262;
reg   [31:0] reg_1266;
reg   [31:0] reg_1270;
reg   [31:0] reg_1274;
reg   [31:0] reg_1278;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] i_1_reg_2487;
wire   [0:0] icmp_ln51_fu_1458_p2;
reg   [0:0] icmp_ln51_reg_2492_pp0_iter1_reg;
reg   [0:0] icmp_ln51_reg_2492_pp0_iter2_reg;
wire   [31:0] trunc_ln55_fu_1476_p1;
reg   [31:0] trunc_ln55_reg_2506;
reg   [31:0] trunc_ln55_10_reg_2511;
reg   [31:0] trunc_ln55_11_reg_2516;
reg   [31:0] trunc_ln55_12_reg_2521;
reg   [31:0] trunc_ln55_13_reg_2526;
reg   [31:0] trunc_ln55_14_reg_2531;
wire   [31:0] trunc_ln55_31_fu_1480_p1;
reg   [31:0] trunc_ln55_31_reg_2536;
reg   [31:0] trunc_ln55_42_reg_2541;
reg   [31:0] trunc_ln55_43_reg_2546;
reg   [31:0] trunc_ln55_44_reg_2551;
reg   [31:0] trunc_ln55_45_reg_2556;
reg   [31:0] trunc_ln55_46_reg_2561;
wire   [31:0] bitcast_ln55_fu_1484_p1;
wire   [31:0] bitcast_ln55_1_fu_1488_p1;
wire   [31:0] bitcast_ln55_2_fu_1493_p1;
wire   [31:0] bitcast_ln55_3_fu_1498_p1;
wire   [31:0] bitcast_ln55_4_fu_1503_p1;
wire   [31:0] bitcast_ln55_5_fu_1508_p1;
wire   [31:0] bitcast_ln55_6_fu_1513_p1;
wire   [31:0] bitcast_ln55_7_fu_1518_p1;
wire   [31:0] bitcast_ln55_8_fu_1523_p1;
wire   [31:0] bitcast_ln55_9_fu_1528_p1;
wire   [31:0] bitcast_ln55_10_fu_1533_p1;
wire   [31:0] trunc_ln55_15_fu_1538_p1;
reg   [31:0] trunc_ln55_15_reg_2621;
reg   [31:0] trunc_ln55_26_reg_2626;
reg   [31:0] trunc_ln55_27_reg_2631;
reg   [31:0] trunc_ln55_28_reg_2636;
reg   [31:0] trunc_ln55_29_reg_2641;
reg   [31:0] trunc_ln55_30_reg_2646;
wire   [31:0] bitcast_ln55_32_fu_1542_p1;
wire   [31:0] bitcast_ln55_33_fu_1546_p1;
wire   [31:0] bitcast_ln55_34_fu_1551_p1;
wire   [31:0] bitcast_ln55_35_fu_1556_p1;
wire   [31:0] bitcast_ln55_36_fu_1561_p1;
wire   [31:0] bitcast_ln55_37_fu_1566_p1;
wire   [31:0] bitcast_ln55_38_fu_1571_p1;
wire   [31:0] bitcast_ln55_39_fu_1576_p1;
wire   [31:0] bitcast_ln55_40_fu_1581_p1;
wire   [31:0] bitcast_ln55_41_fu_1586_p1;
wire   [31:0] bitcast_ln55_42_fu_1591_p1;
wire   [31:0] trunc_ln55_47_fu_1596_p1;
reg   [31:0] trunc_ln55_47_reg_2706;
reg   [31:0] trunc_ln55_58_reg_2711;
reg   [31:0] trunc_ln55_59_reg_2716;
reg   [31:0] trunc_ln55_60_reg_2721;
reg   [31:0] trunc_ln55_61_reg_2726;
reg   [31:0] trunc_ln55_62_reg_2731;
wire   [31:0] bitcast_ln55_11_fu_1610_p1;
wire   [31:0] bitcast_ln55_12_fu_1614_p1;
wire   [31:0] bitcast_ln55_13_fu_1618_p1;
wire   [31:0] bitcast_ln55_14_fu_1622_p1;
wire   [31:0] bitcast_ln55_15_fu_1626_p1;
wire   [31:0] bitcast_ln55_16_fu_1630_p1;
wire   [31:0] bitcast_ln55_17_fu_1634_p1;
wire   [31:0] bitcast_ln55_18_fu_1639_p1;
wire   [31:0] bitcast_ln55_19_fu_1644_p1;
wire   [31:0] bitcast_ln55_20_fu_1649_p1;
wire   [31:0] bitcast_ln55_21_fu_1654_p1;
wire   [31:0] bitcast_ln55_43_fu_1659_p1;
wire   [31:0] bitcast_ln55_44_fu_1663_p1;
wire   [31:0] bitcast_ln55_45_fu_1667_p1;
wire   [31:0] bitcast_ln55_46_fu_1671_p1;
wire   [31:0] bitcast_ln55_47_fu_1675_p1;
wire   [31:0] bitcast_ln55_48_fu_1679_p1;
wire   [31:0] bitcast_ln55_49_fu_1683_p1;
wire   [31:0] bitcast_ln55_50_fu_1688_p1;
wire   [31:0] bitcast_ln55_51_fu_1693_p1;
wire   [31:0] bitcast_ln55_52_fu_1698_p1;
wire   [31:0] bitcast_ln55_53_fu_1703_p1;
wire   [31:0] bitcast_ln55_22_fu_1708_p1;
wire   [31:0] bitcast_ln55_23_fu_1713_p1;
wire   [31:0] bitcast_ln55_24_fu_1718_p1;
wire   [31:0] bitcast_ln55_25_fu_1723_p1;
wire   [31:0] bitcast_ln55_26_fu_1728_p1;
wire   [31:0] bitcast_ln55_27_fu_1733_p1;
wire   [31:0] bitcast_ln55_28_fu_1737_p1;
wire   [31:0] bitcast_ln55_29_fu_1741_p1;
wire   [31:0] bitcast_ln55_30_fu_1745_p1;
wire   [31:0] bitcast_ln55_31_fu_1749_p1;
wire   [31:0] bitcast_ln55_54_fu_1753_p1;
wire   [31:0] bitcast_ln55_55_fu_1758_p1;
wire   [31:0] bitcast_ln55_56_fu_1763_p1;
wire   [31:0] bitcast_ln55_57_fu_1768_p1;
wire   [31:0] bitcast_ln55_58_fu_1773_p1;
wire   [31:0] bitcast_ln55_59_fu_1778_p1;
wire   [31:0] bitcast_ln55_60_fu_1782_p1;
wire   [31:0] bitcast_ln55_61_fu_1786_p1;
wire   [31:0] bitcast_ln55_62_fu_1790_p1;
wire   [31:0] bitcast_ln55_63_fu_1794_p1;
wire   [31:0] grp_fu_858_p2;
reg   [31:0] mul_reg_2946;
wire   [31:0] grp_fu_862_p2;
reg   [31:0] mul22_1_reg_2951;
wire   [31:0] grp_fu_866_p2;
reg   [31:0] mul22_2_reg_2956;
wire   [31:0] grp_fu_870_p2;
reg   [31:0] mul22_3_reg_2961;
wire   [31:0] grp_fu_874_p2;
reg   [31:0] mul22_4_reg_2966;
wire   [31:0] grp_fu_878_p2;
reg   [31:0] mul22_5_reg_2971;
wire   [31:0] grp_fu_882_p2;
reg   [31:0] mul22_6_reg_2976;
wire   [31:0] grp_fu_886_p2;
reg   [31:0] mul22_7_reg_2981;
wire   [31:0] grp_fu_890_p2;
reg   [31:0] mul22_8_reg_2986;
wire   [31:0] grp_fu_894_p2;
reg   [31:0] mul22_9_reg_2991;
wire   [31:0] grp_fu_898_p2;
reg   [31:0] mul22_s_reg_2996;
reg   [31:0] mul22_10_reg_3056;
reg   [31:0] mul22_11_reg_3061;
reg   [31:0] mul22_12_reg_3066;
reg   [31:0] mul22_13_reg_3071;
reg   [31:0] mul22_14_reg_3076;
reg   [31:0] mul22_15_reg_3081;
reg   [31:0] mul22_16_reg_3086;
reg   [31:0] mul22_17_reg_3091;
reg   [31:0] mul22_18_reg_3096;
reg   [31:0] mul22_19_reg_3101;
reg   [31:0] mul22_20_reg_3106;
reg   [31:0] mul22_21_reg_3166;
reg   [31:0] mul22_22_reg_3171;
reg   [31:0] mul22_23_reg_3176;
reg   [31:0] mul22_24_reg_3181;
reg   [31:0] mul22_25_reg_3186;
reg   [31:0] mul22_26_reg_3191;
reg   [31:0] mul22_27_reg_3196;
reg   [31:0] mul22_28_reg_3201;
reg   [31:0] mul22_29_reg_3206;
reg   [31:0] mul22_30_reg_3211;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [31:0] add256_fu_244;
reg   [31:0] ap_sig_allocacmp_add256_load;
wire    ap_loop_init;
reg   [31:0] add25_110_fu_248;
wire   [31:0] grp_fu_818_p2;
reg   [31:0] ap_sig_allocacmp_add25_110_load;
reg   [31:0] add25_211_fu_252;
wire   [31:0] grp_fu_822_p2;
reg   [31:0] ap_sig_allocacmp_add25_211_load;
reg   [31:0] add25_312_fu_256;
wire   [31:0] grp_fu_826_p2;
reg   [31:0] ap_sig_allocacmp_add25_312_load;
reg   [31:0] add25_413_fu_260;
wire   [31:0] grp_fu_830_p2;
reg   [31:0] ap_sig_allocacmp_add25_413_load;
reg   [31:0] add25_514_fu_264;
wire   [31:0] grp_fu_834_p2;
reg   [31:0] ap_sig_allocacmp_add25_514_load;
reg   [31:0] add25_615_fu_268;
wire   [31:0] grp_fu_838_p2;
reg   [31:0] ap_sig_allocacmp_add25_615_load;
reg   [31:0] add25_716_fu_272;
wire   [31:0] grp_fu_842_p2;
reg   [31:0] ap_sig_allocacmp_add25_716_load;
reg   [31:0] add25_817_fu_276;
wire   [31:0] grp_fu_846_p2;
reg   [31:0] ap_sig_allocacmp_add25_817_load;
reg   [31:0] add25_918_fu_280;
wire   [31:0] grp_fu_850_p2;
reg   [31:0] ap_sig_allocacmp_add25_918_load;
reg   [31:0] add25_1019_fu_284;
wire   [31:0] grp_fu_854_p2;
reg   [31:0] ap_sig_allocacmp_add25_1019_load;
reg   [31:0] add25_1120_fu_288;
reg   [31:0] ap_sig_allocacmp_add25_1120_load;
wire    ap_block_pp0_stage0;
reg   [31:0] add25_1221_fu_292;
reg   [31:0] ap_sig_allocacmp_add25_1221_load;
reg   [31:0] add25_1322_fu_296;
reg   [31:0] ap_sig_allocacmp_add25_1322_load;
reg   [31:0] add25_1423_fu_300;
reg   [31:0] ap_sig_allocacmp_add25_1423_load;
reg   [31:0] add25_1524_fu_304;
reg   [31:0] ap_sig_allocacmp_add25_1524_load;
reg   [31:0] add25_1625_fu_308;
reg   [31:0] ap_sig_allocacmp_add25_1625_load;
reg   [31:0] add25_1726_fu_312;
reg   [31:0] ap_sig_allocacmp_add25_1726_load;
reg   [31:0] add25_1827_fu_316;
reg   [31:0] ap_sig_allocacmp_add25_1827_load;
reg   [31:0] add25_1928_fu_320;
reg   [31:0] ap_sig_allocacmp_add25_1928_load;
reg   [31:0] add25_2029_fu_324;
reg   [31:0] ap_sig_allocacmp_add25_2029_load;
reg   [31:0] add25_2130_fu_328;
reg   [31:0] ap_sig_allocacmp_add25_2130_load;
reg   [31:0] add25_2231_fu_332;
reg   [31:0] ap_sig_allocacmp_add25_2231_load;
reg   [31:0] add25_2332_fu_336;
reg   [31:0] ap_sig_allocacmp_add25_2332_load;
reg   [31:0] add25_2433_fu_340;
reg   [31:0] ap_sig_allocacmp_add25_2433_load;
reg   [31:0] add25_2534_fu_344;
reg   [31:0] ap_sig_allocacmp_add25_2534_load;
reg   [31:0] add25_2635_fu_348;
reg   [31:0] ap_sig_allocacmp_add25_2635_load;
reg   [31:0] add25_2736_fu_352;
reg   [31:0] ap_sig_allocacmp_add25_2736_load;
reg   [31:0] add25_2837_fu_356;
reg   [31:0] ap_sig_allocacmp_add25_2837_load;
reg   [31:0] add25_2938_fu_360;
reg   [31:0] ap_sig_allocacmp_add25_2938_load;
reg   [31:0] add25_3039_fu_364;
reg   [31:0] ap_sig_allocacmp_add25_3039_load;
reg   [31:0] add25_3140_fu_368;
reg   [31:0] ap_sig_allocacmp_add25_3140_load;
reg   [9:0] i_fu_372;
wire   [9:0] add_ln51_fu_1600_p2;
reg   [9:0] ap_sig_allocacmp_i_1;
reg    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_814_p0;
reg   [31:0] grp_fu_814_p1;
reg   [31:0] grp_fu_818_p0;
reg   [31:0] grp_fu_818_p1;
reg   [31:0] grp_fu_822_p0;
reg   [31:0] grp_fu_822_p1;
reg   [31:0] grp_fu_826_p0;
reg   [31:0] grp_fu_826_p1;
reg   [31:0] grp_fu_830_p0;
reg   [31:0] grp_fu_830_p1;
reg   [31:0] grp_fu_834_p0;
reg   [31:0] grp_fu_834_p1;
reg   [31:0] grp_fu_838_p0;
reg   [31:0] grp_fu_838_p1;
reg   [31:0] grp_fu_842_p0;
reg   [31:0] grp_fu_842_p1;
reg   [31:0] grp_fu_846_p0;
reg   [31:0] grp_fu_846_p1;
reg   [31:0] grp_fu_850_p0;
reg   [31:0] grp_fu_850_p1;
reg   [31:0] grp_fu_854_p0;
reg   [31:0] grp_fu_854_p1;
reg   [31:0] grp_fu_858_p0;
reg   [31:0] grp_fu_858_p1;
reg   [31:0] grp_fu_862_p0;
reg   [31:0] grp_fu_862_p1;
reg   [31:0] grp_fu_866_p0;
reg   [31:0] grp_fu_866_p1;
reg   [31:0] grp_fu_870_p0;
reg   [31:0] grp_fu_870_p1;
reg   [31:0] grp_fu_874_p0;
reg   [31:0] grp_fu_874_p1;
reg   [31:0] grp_fu_878_p0;
reg   [31:0] grp_fu_878_p1;
reg   [31:0] grp_fu_882_p0;
reg   [31:0] grp_fu_882_p1;
reg   [31:0] grp_fu_886_p0;
reg   [31:0] grp_fu_886_p1;
reg   [31:0] grp_fu_890_p0;
reg   [31:0] grp_fu_890_p1;
reg   [31:0] grp_fu_894_p0;
reg   [31:0] grp_fu_894_p1;
reg   [31:0] grp_fu_898_p0;
reg   [31:0] grp_fu_898_p1;
reg    grp_fu_814_ce;
reg    grp_fu_818_ce;
reg    grp_fu_822_ce;
reg    grp_fu_826_ce;
reg    grp_fu_830_ce;
reg    grp_fu_834_ce;
reg    grp_fu_838_ce;
reg    grp_fu_842_ce;
reg    grp_fu_846_ce;
reg    grp_fu_850_ce;
reg    grp_fu_854_ce;
reg    grp_fu_858_ce;
reg    grp_fu_862_ce;
reg    grp_fu_866_ce;
reg    grp_fu_870_ce;
reg    grp_fu_874_ce;
reg    grp_fu_878_ce;
reg    grp_fu_882_ce;
reg    grp_fu_886_ce;
reg    grp_fu_890_ce;
reg    grp_fu_894_ce;
reg    grp_fu_898_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_818_p0),
    .din1(grp_fu_818_p1),
    .ce(grp_fu_818_ce),
    .dout(grp_fu_818_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_822_p0),
    .din1(grp_fu_822_p1),
    .ce(grp_fu_822_ce),
    .dout(grp_fu_822_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_826_p0),
    .din1(grp_fu_826_p1),
    .ce(grp_fu_826_ce),
    .dout(grp_fu_826_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_830_p0),
    .din1(grp_fu_830_p1),
    .ce(grp_fu_830_ce),
    .dout(grp_fu_830_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_834_p0),
    .din1(grp_fu_834_p1),
    .ce(grp_fu_834_ce),
    .dout(grp_fu_834_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_838_p0),
    .din1(grp_fu_838_p1),
    .ce(grp_fu_838_ce),
    .dout(grp_fu_838_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_842_p0),
    .din1(grp_fu_842_p1),
    .ce(grp_fu_842_ce),
    .dout(grp_fu_842_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_846_p0),
    .din1(grp_fu_846_p1),
    .ce(grp_fu_846_ce),
    .dout(grp_fu_846_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_850_p0),
    .din1(grp_fu_850_p1),
    .ce(grp_fu_850_ce),
    .dout(grp_fu_850_p2)
);

computePointHLS_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_854_p0),
    .din1(grp_fu_854_p1),
    .ce(grp_fu_854_ce),
    .dout(grp_fu_854_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_858_p0),
    .din1(grp_fu_858_p1),
    .ce(grp_fu_858_ce),
    .dout(grp_fu_858_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_862_p0),
    .din1(grp_fu_862_p1),
    .ce(grp_fu_862_ce),
    .dout(grp_fu_862_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_866_p0),
    .din1(grp_fu_866_p1),
    .ce(grp_fu_866_ce),
    .dout(grp_fu_866_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_870_p0),
    .din1(grp_fu_870_p1),
    .ce(grp_fu_870_ce),
    .dout(grp_fu_870_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_874_p0),
    .din1(grp_fu_874_p1),
    .ce(grp_fu_874_ce),
    .dout(grp_fu_874_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_878_p0),
    .din1(grp_fu_878_p1),
    .ce(grp_fu_878_ce),
    .dout(grp_fu_878_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_882_p0),
    .din1(grp_fu_882_p1),
    .ce(grp_fu_882_ce),
    .dout(grp_fu_882_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_886_p0),
    .din1(grp_fu_886_p1),
    .ce(grp_fu_886_ce),
    .dout(grp_fu_886_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_890_p0),
    .din1(grp_fu_890_p1),
    .ce(grp_fu_890_ce),
    .dout(grp_fu_890_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_894_p0),
    .din1(grp_fu_894_p1),
    .ce(grp_fu_894_ce),
    .dout(grp_fu_894_p2)
);

computePointHLS_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_898_p0),
    .din1(grp_fu_898_p1),
    .ce(grp_fu_898_ce),
    .dout(grp_fu_898_p2)
);

computePointHLS_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add256_fu_244 <= add25_lcssa42;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add256_fu_244 <= grp_fu_493_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_1019_fu_284 <= add25_10_lcssa62;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_1019_fu_284 <= grp_fu_854_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_110_fu_248 <= add25_1_lcssa44;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_110_fu_248 <= grp_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1120_fu_288 <= add25_11_lcssa64;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1120_fu_288 <= grp_fu_493_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1221_fu_292 <= add25_12_lcssa66;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1221_fu_292 <= grp_fu_818_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1322_fu_296 <= add25_13_lcssa68;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1322_fu_296 <= grp_fu_822_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1423_fu_300 <= add25_14_lcssa70;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1423_fu_300 <= grp_fu_826_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1524_fu_304 <= add25_15_lcssa72;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1524_fu_304 <= grp_fu_830_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1625_fu_308 <= add25_16_lcssa74;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1625_fu_308 <= grp_fu_834_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1726_fu_312 <= add25_17_lcssa76;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1726_fu_312 <= grp_fu_838_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1827_fu_316 <= add25_18_lcssa78;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1827_fu_316 <= grp_fu_842_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_1928_fu_320 <= add25_19_lcssa80;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_1928_fu_320 <= grp_fu_846_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_2029_fu_324 <= add25_20_lcssa82;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_2029_fu_324 <= grp_fu_850_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_211_fu_252 <= add25_2_lcssa46;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_211_fu_252 <= grp_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            add25_2130_fu_328 <= add25_21_lcssa84;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            add25_2130_fu_328 <= grp_fu_854_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2231_fu_332 <= add25_22_lcssa86;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2231_fu_332 <= grp_fu_493_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2332_fu_336 <= add25_23_lcssa88;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2332_fu_336 <= grp_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2433_fu_340 <= add25_24_lcssa90;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2433_fu_340 <= grp_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2534_fu_344 <= add25_25_lcssa92;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2534_fu_344 <= grp_fu_826_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2635_fu_348 <= add25_26_lcssa94;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2635_fu_348 <= grp_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2736_fu_352 <= add25_27_lcssa96;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2736_fu_352 <= grp_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2837_fu_356 <= add25_28_lcssa98;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2837_fu_356 <= grp_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_2938_fu_360 <= add25_29_lcssa100;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2938_fu_360 <= grp_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_3039_fu_364 <= add25_30_lcssa102;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_3039_fu_364 <= grp_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_312_fu_256 <= add25_3_lcssa48;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_312_fu_256 <= grp_fu_826_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_3140_fu_368 <= add25_31_lcssa104;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_3140_fu_368 <= grp_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_413_fu_260 <= add25_4_lcssa50;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_413_fu_260 <= grp_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_514_fu_264 <= add25_5_lcssa52;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_514_fu_264 <= grp_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_615_fu_268 <= add25_6_lcssa54;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_615_fu_268 <= grp_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_716_fu_272 <= add25_7_lcssa56;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_716_fu_272 <= grp_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_817_fu_276 <= add25_8_lcssa58;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_817_fu_276 <= grp_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add25_918_fu_280 <= add25_9_lcssa60;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add25_918_fu_280 <= grp_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_372 <= 10'd0;
    end else if (((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        i_fu_372 <= add_ln51_fu_1600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_reg_2487 <= ap_sig_allocacmp_i_1;
        icmp_ln51_reg_2492 <= icmp_ln51_fu_1458_p2;
        icmp_ln51_reg_2492_pp0_iter1_reg <= icmp_ln51_reg_2492;
        icmp_ln51_reg_2492_pp0_iter2_reg <= icmp_ln51_reg_2492_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul22_10_reg_3056 <= grp_fu_858_p2;
        mul22_11_reg_3061 <= grp_fu_862_p2;
        mul22_12_reg_3066 <= grp_fu_866_p2;
        mul22_13_reg_3071 <= grp_fu_870_p2;
        mul22_14_reg_3076 <= grp_fu_874_p2;
        mul22_15_reg_3081 <= grp_fu_878_p2;
        mul22_16_reg_3086 <= grp_fu_882_p2;
        mul22_17_reg_3091 <= grp_fu_886_p2;
        mul22_18_reg_3096 <= grp_fu_890_p2;
        mul22_19_reg_3101 <= grp_fu_894_p2;
        mul22_20_reg_3106 <= grp_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul22_1_reg_2951 <= grp_fu_862_p2;
        mul22_2_reg_2956 <= grp_fu_866_p2;
        mul22_3_reg_2961 <= grp_fu_870_p2;
        mul22_4_reg_2966 <= grp_fu_874_p2;
        mul22_5_reg_2971 <= grp_fu_878_p2;
        mul22_6_reg_2976 <= grp_fu_882_p2;
        mul22_7_reg_2981 <= grp_fu_886_p2;
        mul22_8_reg_2986 <= grp_fu_890_p2;
        mul22_9_reg_2991 <= grp_fu_894_p2;
        mul22_s_reg_2996 <= grp_fu_898_p2;
        mul_reg_2946 <= grp_fu_858_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul22_21_reg_3166 <= grp_fu_858_p2;
        mul22_22_reg_3171 <= grp_fu_862_p2;
        mul22_23_reg_3176 <= grp_fu_866_p2;
        mul22_24_reg_3181 <= grp_fu_870_p2;
        mul22_25_reg_3186 <= grp_fu_874_p2;
        mul22_26_reg_3191 <= grp_fu_878_p2;
        mul22_27_reg_3196 <= grp_fu_882_p2;
        mul22_28_reg_3201 <= grp_fu_886_p2;
        mul22_29_reg_3206 <= grp_fu_890_p2;
        mul22_30_reg_3211 <= grp_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_1202 <= {{m_axi_gmem0_RDATA[63:32]}};
        reg_1206 <= {{m_axi_gmem0_RDATA[95:64]}};
        reg_1210 <= {{m_axi_gmem0_RDATA[127:96]}};
        reg_1214 <= {{m_axi_gmem0_RDATA[159:128]}};
        reg_1218 <= {{m_axi_gmem0_RDATA[191:160]}};
        reg_1222 <= {{m_axi_gmem0_RDATA[223:192]}};
        reg_1226 <= {{m_axi_gmem0_RDATA[255:224]}};
        reg_1230 <= {{m_axi_gmem0_RDATA[287:256]}};
        reg_1234 <= {{m_axi_gmem0_RDATA[319:288]}};
        reg_1238 <= {{m_axi_gmem0_RDATA[351:320]}};
        reg_1242 <= {{m_axi_gmem1_RDATA[63:32]}};
        reg_1246 <= {{m_axi_gmem1_RDATA[95:64]}};
        reg_1250 <= {{m_axi_gmem1_RDATA[127:96]}};
        reg_1254 <= {{m_axi_gmem1_RDATA[159:128]}};
        reg_1258 <= {{m_axi_gmem1_RDATA[191:160]}};
        reg_1262 <= {{m_axi_gmem1_RDATA[223:192]}};
        reg_1266 <= {{m_axi_gmem1_RDATA[255:224]}};
        reg_1270 <= {{m_axi_gmem1_RDATA[287:256]}};
        reg_1274 <= {{m_axi_gmem1_RDATA[319:288]}};
        reg_1278 <= {{m_axi_gmem1_RDATA[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln55_10_reg_2511 <= {{m_axi_gmem0_RDATA[383:352]}};
        trunc_ln55_11_reg_2516 <= {{m_axi_gmem0_RDATA[415:384]}};
        trunc_ln55_12_reg_2521 <= {{m_axi_gmem0_RDATA[447:416]}};
        trunc_ln55_13_reg_2526 <= {{m_axi_gmem0_RDATA[479:448]}};
        trunc_ln55_14_reg_2531 <= {{m_axi_gmem0_RDATA[511:480]}};
        trunc_ln55_42_reg_2541 <= {{m_axi_gmem1_RDATA[383:352]}};
        trunc_ln55_43_reg_2546 <= {{m_axi_gmem1_RDATA[415:384]}};
        trunc_ln55_44_reg_2551 <= {{m_axi_gmem1_RDATA[447:416]}};
        trunc_ln55_45_reg_2556 <= {{m_axi_gmem1_RDATA[479:448]}};
        trunc_ln55_46_reg_2561 <= {{m_axi_gmem1_RDATA[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_reg_2492 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        trunc_ln55_15_reg_2621 <= trunc_ln55_15_fu_1538_p1;
        trunc_ln55_47_reg_2706 <= trunc_ln55_47_fu_1596_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        trunc_ln55_26_reg_2626 <= {{m_axi_gmem0_RDATA[383:352]}};
        trunc_ln55_27_reg_2631 <= {{m_axi_gmem0_RDATA[415:384]}};
        trunc_ln55_28_reg_2636 <= {{m_axi_gmem0_RDATA[447:416]}};
        trunc_ln55_29_reg_2641 <= {{m_axi_gmem0_RDATA[479:448]}};
        trunc_ln55_30_reg_2646 <= {{m_axi_gmem0_RDATA[511:480]}};
        trunc_ln55_58_reg_2711 <= {{m_axi_gmem1_RDATA[383:352]}};
        trunc_ln55_59_reg_2716 <= {{m_axi_gmem1_RDATA[415:384]}};
        trunc_ln55_60_reg_2721 <= {{m_axi_gmem1_RDATA[447:416]}};
        trunc_ln55_61_reg_2726 <= {{m_axi_gmem1_RDATA[479:448]}};
        trunc_ln55_62_reg_2731 <= {{m_axi_gmem1_RDATA[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_reg_2492 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln55_31_reg_2536 <= trunc_ln55_31_fu_1480_p1;
        trunc_ln55_reg_2506 <= trunc_ln55_fu_1476_p1;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add256_out_ap_vld = 1'b1;
    end else begin
        add256_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1019_out_ap_vld = 1'b1;
    end else begin
        add25_1019_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_110_out_ap_vld = 1'b1;
    end else begin
        add25_110_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1120_out_ap_vld = 1'b1;
    end else begin
        add25_1120_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1221_out_ap_vld = 1'b1;
    end else begin
        add25_1221_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1322_out_ap_vld = 1'b1;
    end else begin
        add25_1322_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1423_out_ap_vld = 1'b1;
    end else begin
        add25_1423_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1524_out_ap_vld = 1'b1;
    end else begin
        add25_1524_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1625_out_ap_vld = 1'b1;
    end else begin
        add25_1625_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1726_out_ap_vld = 1'b1;
    end else begin
        add25_1726_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1827_out_ap_vld = 1'b1;
    end else begin
        add25_1827_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_1928_out_ap_vld = 1'b1;
    end else begin
        add25_1928_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2029_out_ap_vld = 1'b1;
    end else begin
        add25_2029_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_211_out_ap_vld = 1'b1;
    end else begin
        add25_211_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2130_out_ap_vld = 1'b1;
    end else begin
        add25_2130_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2231_out_ap_vld = 1'b1;
    end else begin
        add25_2231_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2332_out_ap_vld = 1'b1;
    end else begin
        add25_2332_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2433_out_ap_vld = 1'b1;
    end else begin
        add25_2433_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2534_out_ap_vld = 1'b1;
    end else begin
        add25_2534_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2635_out_ap_vld = 1'b1;
    end else begin
        add25_2635_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2736_out_ap_vld = 1'b1;
    end else begin
        add25_2736_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2837_out_ap_vld = 1'b1;
    end else begin
        add25_2837_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_2938_out_ap_vld = 1'b1;
    end else begin
        add25_2938_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_3039_out_ap_vld = 1'b1;
    end else begin
        add25_3039_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_312_out_ap_vld = 1'b1;
    end else begin
        add25_312_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_3140_out_ap_vld = 1'b1;
    end else begin
        add25_3140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_413_out_ap_vld = 1'b1;
    end else begin
        add25_413_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_514_out_ap_vld = 1'b1;
    end else begin
        add25_514_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_615_out_ap_vld = 1'b1;
    end else begin
        add25_615_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_716_out_ap_vld = 1'b1;
    end else begin
        add25_716_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_817_out_ap_vld = 1'b1;
    end else begin
        add25_817_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add25_918_out_ap_vld = 1'b1;
    end else begin
        add25_918_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_2492_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add256_load = grp_fu_493_p_dout0;
    end else begin
        ap_sig_allocacmp_add256_load = add256_fu_244;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_1019_load = grp_fu_854_p2;
    end else begin
        ap_sig_allocacmp_add25_1019_load = add25_1019_fu_284;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_110_load = grp_fu_818_p2;
    end else begin
        ap_sig_allocacmp_add25_110_load = add25_110_fu_248;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1120_load = grp_fu_493_p_dout0;
    end else begin
        ap_sig_allocacmp_add25_1120_load = add25_1120_fu_288;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1221_load = grp_fu_818_p2;
    end else begin
        ap_sig_allocacmp_add25_1221_load = add25_1221_fu_292;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1322_load = grp_fu_822_p2;
    end else begin
        ap_sig_allocacmp_add25_1322_load = add25_1322_fu_296;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1423_load = grp_fu_826_p2;
    end else begin
        ap_sig_allocacmp_add25_1423_load = add25_1423_fu_300;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1524_load = grp_fu_830_p2;
    end else begin
        ap_sig_allocacmp_add25_1524_load = add25_1524_fu_304;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1625_load = grp_fu_834_p2;
    end else begin
        ap_sig_allocacmp_add25_1625_load = add25_1625_fu_308;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1726_load = grp_fu_838_p2;
    end else begin
        ap_sig_allocacmp_add25_1726_load = add25_1726_fu_312;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1827_load = grp_fu_842_p2;
    end else begin
        ap_sig_allocacmp_add25_1827_load = add25_1827_fu_316;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_1928_load = grp_fu_846_p2;
    end else begin
        ap_sig_allocacmp_add25_1928_load = add25_1928_fu_320;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_2029_load = grp_fu_850_p2;
    end else begin
        ap_sig_allocacmp_add25_2029_load = add25_2029_fu_324;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_211_load = grp_fu_822_p2;
    end else begin
        ap_sig_allocacmp_add25_211_load = add25_211_fu_252;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_add25_2130_load = grp_fu_854_p2;
    end else begin
        ap_sig_allocacmp_add25_2130_load = add25_2130_fu_328;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2231_load = grp_fu_493_p_dout0;
    end else begin
        ap_sig_allocacmp_add25_2231_load = add25_2231_fu_332;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2332_load = grp_fu_818_p2;
    end else begin
        ap_sig_allocacmp_add25_2332_load = add25_2332_fu_336;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2433_load = grp_fu_822_p2;
    end else begin
        ap_sig_allocacmp_add25_2433_load = add25_2433_fu_340;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2534_load = grp_fu_826_p2;
    end else begin
        ap_sig_allocacmp_add25_2534_load = add25_2534_fu_344;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2635_load = grp_fu_830_p2;
    end else begin
        ap_sig_allocacmp_add25_2635_load = add25_2635_fu_348;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2736_load = grp_fu_834_p2;
    end else begin
        ap_sig_allocacmp_add25_2736_load = add25_2736_fu_352;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2837_load = grp_fu_838_p2;
    end else begin
        ap_sig_allocacmp_add25_2837_load = add25_2837_fu_356;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_2938_load = grp_fu_842_p2;
    end else begin
        ap_sig_allocacmp_add25_2938_load = add25_2938_fu_360;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_3039_load = grp_fu_846_p2;
    end else begin
        ap_sig_allocacmp_add25_3039_load = add25_3039_fu_364;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_312_load = grp_fu_826_p2;
    end else begin
        ap_sig_allocacmp_add25_312_load = add25_312_fu_256;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_add25_3140_load = grp_fu_850_p2;
    end else begin
        ap_sig_allocacmp_add25_3140_load = add25_3140_fu_368;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_413_load = grp_fu_830_p2;
    end else begin
        ap_sig_allocacmp_add25_413_load = add25_413_fu_260;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_514_load = grp_fu_834_p2;
    end else begin
        ap_sig_allocacmp_add25_514_load = add25_514_fu_264;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_615_load = grp_fu_838_p2;
    end else begin
        ap_sig_allocacmp_add25_615_load = add25_615_fu_268;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_716_load = grp_fu_842_p2;
    end else begin
        ap_sig_allocacmp_add25_716_load = add25_716_fu_272;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_817_load = grp_fu_846_p2;
    end else begin
        ap_sig_allocacmp_add25_817_load = add25_817_fu_276;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_sig_allocacmp_add25_918_load = grp_fu_850_p2;
    end else begin
        ap_sig_allocacmp_add25_918_load = add25_918_fu_280;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_372;
    end
end

always @ (*) begin
    if ((((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_814_ce = 1'b1;
    end else begin
        grp_fu_814_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_814_p0 = ap_sig_allocacmp_add25_2231_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_814_p0 = ap_sig_allocacmp_add25_1120_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_814_p0 = ap_sig_allocacmp_add256_load;
    end else begin
        grp_fu_814_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_814_p1 = mul22_21_reg_3166;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_814_p1 = mul22_10_reg_3056;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_814_p1 = mul_reg_2946;
    end else begin
        grp_fu_814_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_818_ce = 1'b1;
    end else begin
        grp_fu_818_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_818_p0 = ap_sig_allocacmp_add25_2332_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_818_p0 = ap_sig_allocacmp_add25_1221_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_818_p0 = ap_sig_allocacmp_add25_110_load;
    end else begin
        grp_fu_818_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_818_p1 = mul22_22_reg_3171;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_818_p1 = mul22_11_reg_3061;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_818_p1 = mul22_1_reg_2951;
    end else begin
        grp_fu_818_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_822_ce = 1'b1;
    end else begin
        grp_fu_822_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_822_p0 = ap_sig_allocacmp_add25_2433_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_822_p0 = ap_sig_allocacmp_add25_1322_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_822_p0 = ap_sig_allocacmp_add25_211_load;
    end else begin
        grp_fu_822_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_822_p1 = mul22_23_reg_3176;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_822_p1 = mul22_12_reg_3066;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_822_p1 = mul22_2_reg_2956;
    end else begin
        grp_fu_822_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_826_ce = 1'b1;
    end else begin
        grp_fu_826_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_826_p0 = ap_sig_allocacmp_add25_2534_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_826_p0 = ap_sig_allocacmp_add25_1423_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_826_p0 = ap_sig_allocacmp_add25_312_load;
    end else begin
        grp_fu_826_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_826_p1 = mul22_24_reg_3181;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_826_p1 = mul22_13_reg_3071;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_826_p1 = mul22_3_reg_2961;
    end else begin
        grp_fu_826_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_830_ce = 1'b1;
    end else begin
        grp_fu_830_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_830_p0 = ap_sig_allocacmp_add25_2635_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_830_p0 = ap_sig_allocacmp_add25_1524_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_830_p0 = ap_sig_allocacmp_add25_413_load;
    end else begin
        grp_fu_830_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_830_p1 = mul22_25_reg_3186;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_830_p1 = mul22_14_reg_3076;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_830_p1 = mul22_4_reg_2966;
    end else begin
        grp_fu_830_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_834_ce = 1'b1;
    end else begin
        grp_fu_834_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_834_p0 = ap_sig_allocacmp_add25_2736_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_834_p0 = ap_sig_allocacmp_add25_1625_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_834_p0 = ap_sig_allocacmp_add25_514_load;
    end else begin
        grp_fu_834_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_834_p1 = mul22_26_reg_3191;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_834_p1 = mul22_15_reg_3081;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_834_p1 = mul22_5_reg_2971;
    end else begin
        grp_fu_834_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_838_ce = 1'b1;
    end else begin
        grp_fu_838_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_838_p0 = ap_sig_allocacmp_add25_2837_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_838_p0 = ap_sig_allocacmp_add25_1726_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_838_p0 = ap_sig_allocacmp_add25_615_load;
    end else begin
        grp_fu_838_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_838_p1 = mul22_27_reg_3196;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_838_p1 = mul22_16_reg_3086;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_838_p1 = mul22_6_reg_2976;
    end else begin
        grp_fu_838_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_842_ce = 1'b1;
    end else begin
        grp_fu_842_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_842_p0 = ap_sig_allocacmp_add25_2938_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_842_p0 = ap_sig_allocacmp_add25_1827_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_842_p0 = ap_sig_allocacmp_add25_716_load;
    end else begin
        grp_fu_842_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_842_p1 = mul22_28_reg_3201;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_842_p1 = mul22_17_reg_3091;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_842_p1 = mul22_7_reg_2981;
    end else begin
        grp_fu_842_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_846_ce = 1'b1;
    end else begin
        grp_fu_846_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_846_p0 = ap_sig_allocacmp_add25_3039_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_846_p0 = ap_sig_allocacmp_add25_1928_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_846_p0 = ap_sig_allocacmp_add25_817_load;
    end else begin
        grp_fu_846_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_846_p1 = mul22_29_reg_3206;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_846_p1 = mul22_18_reg_3096;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_846_p1 = mul22_8_reg_2986;
    end else begin
        grp_fu_846_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_850_ce = 1'b1;
    end else begin
        grp_fu_850_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_850_p0 = ap_sig_allocacmp_add25_3140_load;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_850_p0 = ap_sig_allocacmp_add25_2029_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_850_p0 = ap_sig_allocacmp_add25_918_load;
    end else begin
        grp_fu_850_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_850_p1 = mul22_30_reg_3211;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_850_p1 = mul22_19_reg_3101;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_850_p1 = mul22_9_reg_2991;
    end else begin
        grp_fu_850_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_854_ce = 1'b1;
    end else begin
        grp_fu_854_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_854_p0 = ap_sig_allocacmp_add25_2130_load;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_854_p0 = ap_sig_allocacmp_add25_1019_load;
    end else begin
        grp_fu_854_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_854_p1 = mul22_20_reg_3106;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_854_p1 = mul22_s_reg_2996;
    end else begin
        grp_fu_854_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_858_ce = 1'b1;
    end else begin
        grp_fu_858_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_858_p0 = bitcast_ln55_22_fu_1708_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_858_p0 = bitcast_ln55_11_fu_1610_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_858_p0 = bitcast_ln55_fu_1484_p1;
    end else begin
        grp_fu_858_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_858_p1 = bitcast_ln55_54_fu_1753_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_858_p1 = bitcast_ln55_43_fu_1659_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_858_p1 = bitcast_ln55_32_fu_1542_p1;
    end else begin
        grp_fu_858_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_862_ce = 1'b1;
    end else begin
        grp_fu_862_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_862_p0 = bitcast_ln55_23_fu_1713_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_862_p0 = bitcast_ln55_12_fu_1614_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_862_p0 = bitcast_ln55_1_fu_1488_p1;
    end else begin
        grp_fu_862_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_862_p1 = bitcast_ln55_55_fu_1758_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_862_p1 = bitcast_ln55_44_fu_1663_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_862_p1 = bitcast_ln55_33_fu_1546_p1;
    end else begin
        grp_fu_862_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_866_ce = 1'b1;
    end else begin
        grp_fu_866_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_866_p0 = bitcast_ln55_24_fu_1718_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_866_p0 = bitcast_ln55_13_fu_1618_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_866_p0 = bitcast_ln55_2_fu_1493_p1;
    end else begin
        grp_fu_866_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_866_p1 = bitcast_ln55_56_fu_1763_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_866_p1 = bitcast_ln55_45_fu_1667_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_866_p1 = bitcast_ln55_34_fu_1551_p1;
    end else begin
        grp_fu_866_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_870_ce = 1'b1;
    end else begin
        grp_fu_870_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_870_p0 = bitcast_ln55_25_fu_1723_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_870_p0 = bitcast_ln55_14_fu_1622_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_870_p0 = bitcast_ln55_3_fu_1498_p1;
    end else begin
        grp_fu_870_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_870_p1 = bitcast_ln55_57_fu_1768_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_870_p1 = bitcast_ln55_46_fu_1671_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_870_p1 = bitcast_ln55_35_fu_1556_p1;
    end else begin
        grp_fu_870_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_874_ce = 1'b1;
    end else begin
        grp_fu_874_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_874_p0 = bitcast_ln55_26_fu_1728_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_874_p0 = bitcast_ln55_15_fu_1626_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_874_p0 = bitcast_ln55_4_fu_1503_p1;
    end else begin
        grp_fu_874_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_874_p1 = bitcast_ln55_58_fu_1773_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_874_p1 = bitcast_ln55_47_fu_1675_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_874_p1 = bitcast_ln55_36_fu_1561_p1;
    end else begin
        grp_fu_874_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_878_ce = 1'b1;
    end else begin
        grp_fu_878_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_878_p0 = bitcast_ln55_27_fu_1733_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_878_p0 = bitcast_ln55_16_fu_1630_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_878_p0 = bitcast_ln55_5_fu_1508_p1;
    end else begin
        grp_fu_878_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_878_p1 = bitcast_ln55_59_fu_1778_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_878_p1 = bitcast_ln55_48_fu_1679_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_878_p1 = bitcast_ln55_37_fu_1566_p1;
    end else begin
        grp_fu_878_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_882_ce = 1'b1;
    end else begin
        grp_fu_882_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_882_p0 = bitcast_ln55_28_fu_1737_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_882_p0 = bitcast_ln55_17_fu_1634_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_882_p0 = bitcast_ln55_6_fu_1513_p1;
    end else begin
        grp_fu_882_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_882_p1 = bitcast_ln55_60_fu_1782_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_882_p1 = bitcast_ln55_49_fu_1683_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_882_p1 = bitcast_ln55_38_fu_1571_p1;
    end else begin
        grp_fu_882_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_886_ce = 1'b1;
    end else begin
        grp_fu_886_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_886_p0 = bitcast_ln55_29_fu_1741_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_886_p0 = bitcast_ln55_18_fu_1639_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_886_p0 = bitcast_ln55_7_fu_1518_p1;
    end else begin
        grp_fu_886_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_886_p1 = bitcast_ln55_61_fu_1786_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_886_p1 = bitcast_ln55_50_fu_1688_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_886_p1 = bitcast_ln55_39_fu_1576_p1;
    end else begin
        grp_fu_886_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_890_ce = 1'b1;
    end else begin
        grp_fu_890_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_890_p0 = bitcast_ln55_30_fu_1745_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_890_p0 = bitcast_ln55_19_fu_1644_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_890_p0 = bitcast_ln55_8_fu_1523_p1;
    end else begin
        grp_fu_890_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_890_p1 = bitcast_ln55_62_fu_1790_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_890_p1 = bitcast_ln55_51_fu_1693_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_890_p1 = bitcast_ln55_40_fu_1581_p1;
    end else begin
        grp_fu_890_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_894_ce = 1'b1;
    end else begin
        grp_fu_894_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_894_p0 = bitcast_ln55_31_fu_1749_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_894_p0 = bitcast_ln55_20_fu_1649_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_894_p0 = bitcast_ln55_9_fu_1528_p1;
    end else begin
        grp_fu_894_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_894_p1 = bitcast_ln55_63_fu_1794_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_894_p1 = bitcast_ln55_52_fu_1698_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_894_p1 = bitcast_ln55_41_fu_1586_p1;
    end else begin
        grp_fu_894_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_898_ce = 1'b1;
    end else begin
        grp_fu_898_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_898_p0 = bitcast_ln55_21_fu_1654_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_898_p0 = bitcast_ln55_10_fu_1533_p1;
    end else begin
        grp_fu_898_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_898_p1 = bitcast_ln55_53_fu_1703_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_898_p1 = bitcast_ln55_42_fu_1591_p1;
    end else begin
        grp_fu_898_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln51_reg_2492 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem1_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter2_stage1) & (ap_idle_pp0_0to1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add256_out = add256_fu_244;

assign add25_1019_out = add25_1019_fu_284;

assign add25_110_out = add25_110_fu_248;

assign add25_1120_out = add25_1120_fu_288;

assign add25_1221_out = add25_1221_fu_292;

assign add25_1322_out = add25_1322_fu_296;

assign add25_1423_out = add25_1423_fu_300;

assign add25_1524_out = add25_1524_fu_304;

assign add25_1625_out = add25_1625_fu_308;

assign add25_1726_out = add25_1726_fu_312;

assign add25_1827_out = add25_1827_fu_316;

assign add25_1928_out = add25_1928_fu_320;

assign add25_2029_out = add25_2029_fu_324;

assign add25_211_out = add25_211_fu_252;

assign add25_2130_out = add25_2130_fu_328;

assign add25_2231_out = add25_2231_fu_332;

assign add25_2332_out = add25_2332_fu_336;

assign add25_2433_out = add25_2433_fu_340;

assign add25_2534_out = add25_2534_fu_344;

assign add25_2635_out = add25_2635_fu_348;

assign add25_2736_out = add25_2736_fu_352;

assign add25_2837_out = add25_2837_fu_356;

assign add25_2938_out = add25_2938_fu_360;

assign add25_3039_out = add25_3039_fu_364;

assign add25_312_out = add25_312_fu_256;

assign add25_3140_out = add25_3140_fu_368;

assign add25_413_out = add25_413_fu_260;

assign add25_514_out = add25_514_fu_264;

assign add25_615_out = add25_615_fu_268;

assign add25_716_out = add25_716_fu_272;

assign add25_817_out = add25_817_fu_276;

assign add25_918_out = add25_918_fu_280;

assign add_ln51_fu_1600_p2 = (i_1_reg_2487 + 10'd32);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem0_RVALID == 1'b0)) | ((icmp_ln51_reg_2492 == 1'd1) & (m_axi_gmem1_RVALID == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign bitcast_ln55_10_fu_1533_p1 = reg_1238;

assign bitcast_ln55_11_fu_1610_p1 = trunc_ln55_10_reg_2511;

assign bitcast_ln55_12_fu_1614_p1 = trunc_ln55_11_reg_2516;

assign bitcast_ln55_13_fu_1618_p1 = trunc_ln55_12_reg_2521;

assign bitcast_ln55_14_fu_1622_p1 = trunc_ln55_13_reg_2526;

assign bitcast_ln55_15_fu_1626_p1 = trunc_ln55_14_reg_2531;

assign bitcast_ln55_16_fu_1630_p1 = trunc_ln55_15_reg_2621;

assign bitcast_ln55_17_fu_1634_p1 = reg_1202;

assign bitcast_ln55_18_fu_1639_p1 = reg_1206;

assign bitcast_ln55_19_fu_1644_p1 = reg_1210;

assign bitcast_ln55_1_fu_1488_p1 = reg_1202;

assign bitcast_ln55_20_fu_1649_p1 = reg_1214;

assign bitcast_ln55_21_fu_1654_p1 = reg_1218;

assign bitcast_ln55_22_fu_1708_p1 = reg_1222;

assign bitcast_ln55_23_fu_1713_p1 = reg_1226;

assign bitcast_ln55_24_fu_1718_p1 = reg_1230;

assign bitcast_ln55_25_fu_1723_p1 = reg_1234;

assign bitcast_ln55_26_fu_1728_p1 = reg_1238;

assign bitcast_ln55_27_fu_1733_p1 = trunc_ln55_26_reg_2626;

assign bitcast_ln55_28_fu_1737_p1 = trunc_ln55_27_reg_2631;

assign bitcast_ln55_29_fu_1741_p1 = trunc_ln55_28_reg_2636;

assign bitcast_ln55_2_fu_1493_p1 = reg_1206;

assign bitcast_ln55_30_fu_1745_p1 = trunc_ln55_29_reg_2641;

assign bitcast_ln55_31_fu_1749_p1 = trunc_ln55_30_reg_2646;

assign bitcast_ln55_32_fu_1542_p1 = trunc_ln55_31_reg_2536;

assign bitcast_ln55_33_fu_1546_p1 = reg_1242;

assign bitcast_ln55_34_fu_1551_p1 = reg_1246;

assign bitcast_ln55_35_fu_1556_p1 = reg_1250;

assign bitcast_ln55_36_fu_1561_p1 = reg_1254;

assign bitcast_ln55_37_fu_1566_p1 = reg_1258;

assign bitcast_ln55_38_fu_1571_p1 = reg_1262;

assign bitcast_ln55_39_fu_1576_p1 = reg_1266;

assign bitcast_ln55_3_fu_1498_p1 = reg_1210;

assign bitcast_ln55_40_fu_1581_p1 = reg_1270;

assign bitcast_ln55_41_fu_1586_p1 = reg_1274;

assign bitcast_ln55_42_fu_1591_p1 = reg_1278;

assign bitcast_ln55_43_fu_1659_p1 = trunc_ln55_42_reg_2541;

assign bitcast_ln55_44_fu_1663_p1 = trunc_ln55_43_reg_2546;

assign bitcast_ln55_45_fu_1667_p1 = trunc_ln55_44_reg_2551;

assign bitcast_ln55_46_fu_1671_p1 = trunc_ln55_45_reg_2556;

assign bitcast_ln55_47_fu_1675_p1 = trunc_ln55_46_reg_2561;

assign bitcast_ln55_48_fu_1679_p1 = trunc_ln55_47_reg_2706;

assign bitcast_ln55_49_fu_1683_p1 = reg_1242;

assign bitcast_ln55_4_fu_1503_p1 = reg_1214;

assign bitcast_ln55_50_fu_1688_p1 = reg_1246;

assign bitcast_ln55_51_fu_1693_p1 = reg_1250;

assign bitcast_ln55_52_fu_1698_p1 = reg_1254;

assign bitcast_ln55_53_fu_1703_p1 = reg_1258;

assign bitcast_ln55_54_fu_1753_p1 = reg_1262;

assign bitcast_ln55_55_fu_1758_p1 = reg_1266;

assign bitcast_ln55_56_fu_1763_p1 = reg_1270;

assign bitcast_ln55_57_fu_1768_p1 = reg_1274;

assign bitcast_ln55_58_fu_1773_p1 = reg_1278;

assign bitcast_ln55_59_fu_1778_p1 = trunc_ln55_58_reg_2711;

assign bitcast_ln55_5_fu_1508_p1 = reg_1218;

assign bitcast_ln55_60_fu_1782_p1 = trunc_ln55_59_reg_2716;

assign bitcast_ln55_61_fu_1786_p1 = trunc_ln55_60_reg_2721;

assign bitcast_ln55_62_fu_1790_p1 = trunc_ln55_61_reg_2726;

assign bitcast_ln55_63_fu_1794_p1 = trunc_ln55_62_reg_2731;

assign bitcast_ln55_6_fu_1513_p1 = reg_1222;

assign bitcast_ln55_7_fu_1518_p1 = reg_1226;

assign bitcast_ln55_8_fu_1523_p1 = reg_1230;

assign bitcast_ln55_9_fu_1528_p1 = reg_1234;

assign bitcast_ln55_fu_1484_p1 = trunc_ln55_reg_2506;

assign grp_fu_493_p_ce = grp_fu_814_ce;

assign grp_fu_493_p_din0 = grp_fu_814_p0;

assign grp_fu_493_p_din1 = grp_fu_814_p1;

assign grp_fu_493_p_opcode = 2'd0;

assign icmp_ln51_fu_1458_p2 = ((ap_sig_allocacmp_i_1 < 10'd800) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 512'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 64'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign m_axi_gmem1_ARADDR = 64'd0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_ARVALID = 1'b0;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_WDATA = 512'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 64'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign trunc_ln55_15_fu_1538_p1 = m_axi_gmem0_RDATA[31:0];

assign trunc_ln55_31_fu_1480_p1 = m_axi_gmem1_RDATA[31:0];

assign trunc_ln55_47_fu_1596_p1 = m_axi_gmem1_RDATA[31:0];

assign trunc_ln55_fu_1476_p1 = m_axi_gmem0_RDATA[31:0];

endmodule //computePointHLS_computePointHLS_Pipeline_VITIS_LOOP_51_3
